package ro.helator.ie.camel.templates.test;

import java.io.File;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Enumeration;

import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.service.component.annotations.Activate;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Deactivate;
import org.osgi.service.component.annotations.Reference;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ro.helator.ie.camel.interfaces.TemplateScanerService;

@Component(name = "IE_CamelTemplatesTestActivator")
public class IE_CamelTemplatesTestActivator {

	private static final Logger log = LoggerFactory.getLogger(IE_CamelTemplatesTestActivator.class);

	private TemplateScanerService templateScaner;

	private Bundle bundle;
	
	public static final String TEMPLATE_MAIN_SCAN = "/templates/routes/";
	public static final String TEMPLATE_SCAN_ALL = "*";
	
	@Activate
	public void activate() {
		log.info("Helator's Integration Engine - Camel Templates Test bundle has started!");
//		templateScaner.register(FrameworkUtil.getBundle(IE_CamelTemplatesTestActivator.class));
		bundle = FrameworkUtil.getBundle(IE_CamelTemplatesTestActivator.class);
		try {
			Enumeration<URL> entries = bundle.findEntries(TEMPLATE_MAIN_SCAN, TEMPLATE_SCAN_ALL, false);
			log.info("===========");
			while (entries.hasMoreElements()) {
				URL url = (URL) entries.nextElement();
				String main = url.getFile().replace(TEMPLATE_MAIN_SCAN, "").replace("/", "").replace("\\", "");
				log.info(main);
				
				Enumeration<URL> subEntries = bundle.findEntries(main, TEMPLATE_SCAN_ALL, false);
				while(subEntries.hasMoreElements()){
					URL subUrl = (URL) subEntries.nextElement();
					String sub = subUrl.getFile().replace(url.getFile() + "/", "");
					log.info(" \\_");
//					Enumeration<URL> subEntries = bundle.findEntries(main, TEMPLATE_SCAN_ALL, false);
				}
				InputStream stream = this.getClass().getClassLoader().getResourceAsStream(url.getFile());
				if(stream != null){
				log.info(stream.available() + "");
				} else {
					log.info("null");
				}
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Deactivate
	public void deactivate() {
		log.info("Helator's Integration Engine - Camel Templates Test bundle has been stoped!");
//		templateScaner.unregister(FrameworkUtil.getBundle(IE_CamelTemplatesTestActivator.class));
	}

	@Reference
	public void setTemplateScaner(final TemplateScanerService templateScaner) {
		this.templateScaner = templateScaner;
	}

	public void unsetTemplateScaner(final TemplateScanerService templateScaner) {
		this.templateScaner = templateScaner;
	}
}
